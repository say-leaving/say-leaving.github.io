{"meta":{"title":"落叶不归","subtitle":null,"description":null,"author":"luoye","url":"https://say-leaving.github.io"},"pages":[{"title":"Repositories","date":"2018-11-15T14:21:56.878Z","updated":"2018-10-04T14:11:17.000Z","comments":false,"path":"repository/index.html","permalink":"https://say-leaving.github.io/repository/index.html","excerpt":"","text":""},{"title":"书单","date":"2018-11-15T14:21:56.874Z","updated":"2018-10-04T14:11:17.000Z","comments":false,"path":"books/index.html","permalink":"https://say-leaving.github.io/books/index.html","excerpt":"","text":""},{"title":"404 Not Found：该页无法显示","date":"2018-11-15T14:21:56.867Z","updated":"2018-10-04T14:11:17.000Z","comments":false,"path":"/404.html","permalink":"https://say-leaving.github.io//404.html","excerpt":"","text":""},{"title":"关于","date":"2018-11-15T14:21:56.872Z","updated":"2018-10-04T14:11:17.000Z","comments":false,"path":"about/index.html","permalink":"https://say-leaving.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"分类","date":"2018-11-15T14:21:56.875Z","updated":"2018-10-04T14:11:17.000Z","comments":false,"path":"categories/index.html","permalink":"https://say-leaving.github.io/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-11-15T14:21:56.876Z","updated":"2018-10-04T14:11:17.000Z","comments":true,"path":"links/index.html","permalink":"https://say-leaving.github.io/links/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-11-15T14:21:56.880Z","updated":"2018-10-04T14:11:17.000Z","comments":false,"path":"tags/index.html","permalink":"https://say-leaving.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"yml语法简记","slug":"yaml语法","date":"2018-11-15T14:41:26.407Z","updated":"2018-11-15T14:46:47.991Z","comments":true,"path":"2018/11/15/yaml语法/","link":"","permalink":"https://say-leaving.github.io/2018/11/15/yaml语法/","excerpt":"","text":"2、YAML语法： 1、基本语法 k:(空格)v：表示一对键值对（空格必须有）； 以空格的缩进来控制层级关系；只要是左对齐的一列数据，都是同一个层级的 1234server: port: 8081 path: /hello123 属性和值是大小写敏感的； 2、值的写法 字面量：普通的值（数字，字符串，布尔） k: v：字面直接来写； 字符串默认不用加上单引号或者双引号； “”：双引号；不会转义字符串里面的特殊字符；特殊字符会作为本身想表示的意思name: “zhangsan \\n lisi”：输出；zhangsan 换行 lisi ”：单引号；会转义特殊字符，特殊字符最终只是一个普通的字符串数据 name: ‘zhangsan \\n lisi’：输出；zhangsan \\n lisi 对象、Map（属性和值）（键值对）： k: v ：在下一行来写对象的属性和值的关系；注意缩进 对象还是k: v的方式 1234friends: lastName: zhangsan age: 20 123 行内写法： 12friends: &#123;lastName: zhangsan,age: 20&#125;1 数组（List、Set）： 用- 值表示数组中的一个元素 12345pets: ‐ cat ‐ dog ‐ pig1234 行内写法 1pets: [cat,dog,pig]","categories":[],"tags":[]},{"title":"测试页面","slug":"hello-world","date":"2018-11-15T05:43:34.752Z","updated":"2018-11-15T14:45:11.358Z","comments":true,"path":"2018/11/15/hello-world/","link":"","permalink":"https://say-leaving.github.io/2018/11/15/hello-world/","excerpt":"","text":"Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}